Reusable code wraps it in method, using other class need to be initiate in other your r using or 
In main. Void vs return, if the method is return value then you can print in system.out.print() but 
You cannot do void method give you error, for testing purpose we us return type pass.
String is class and has many build methods, two to declare it 
Manipulating string 
1 String str = new String ()
2. String str = “abdul”
For looping purpose, we use charAt(i)
With array is a[i]

Inheritance 
Common or redundant make it in one class and inherited to other 
Grandfather-father-grandchild. you can inherit multiple with extends 
Reduce redundant code 
Childe class can inherit both father and grandfather at the same time 
Father extends Grandfather
And grandchild extends father which already extends grandfather access methods in grandfather and father class 
Interface 
Client agreement between actual code and class implementation 
Only signature, not braces, no implementation, just method, to implement we need classes 
Method is void just a signature, need to be public, by default is public 
You can create object same class in the main 
You can create you own methods too along with the interface’s implantation 
Public void Name ();
Child reference can be assign to parent class 
Return type , runtime polymorphism 


(parent )Deveops de = new Deveops (
Login n = new Devops ();
Intertest in his own methods 
(only print banker method that is in parent class Deveps class )Banker be = new Deveops ()

You can more then one interface in a class separate with comma 
One class impellent multiple interface 

Array
Declare and initialize it 
Storing multiple value in single container of the same data type 
Create array then initialize it 
Or you can do both to gather 
Multiple dimension array
Combination of x and y or row and column 
Int i[][]= new int[3][4];
Or 
Int a[]={{1,2,3}.3,4,5,}};

Date
Calendar class and date class to use
Create  object of the class 
Calendar class is preferable 
Calendar  a = calendar.getinstance()
Date d = new Date()
Require specific format then you SampledateFormate sd = new sampledateforamte(“d/mm/yyyy”);
Contractor is executing block of code when object is created, constructor invoke when create object
Explicitly by compiler 
Implicitly is created by developer
We creating for instance variable . parametrize constructor vs default. you can have many contractors . when you create then
 default one will not execute . when you created then need to be initiated .
Super 
Is use with inheritance when there is collision between variable or method has the same type. Then we super to refer to
 parent object 
Super.name, super.methodname(); you can use super key work in constructor 
Name same value then super key is not require 
Remember, super key should be the fist 
This key word
Refer to class level object not method level 
It global variable 
Global vs local variable 

Final key word, is always constant not reference type it never alter or going to be change . you can make method and 
classes too as private
Final vs finally is use in exception 
Java package , user define package ,package import package name. class name 
Utill and lang package 
Class a can use class be if are in the same package after instantiating 
For other package you need to import package 
Access modifier 
Default, private, public, protected
If you did not specify the type by default is public. Default can access in entire package but not access outside package
 even if inherited the package even if you import the package, no access 
You can access to class not method if you define default 
Public you access in entire package and outside package by inheriting or import package 
Private no access outside of class where define 
Protected is accessible in entire package, subclasses can access  
Protected +default +one more feature you can use by other package those that only inheriting the class the parent class 
Exception 
Find error without failing the program by debugging, exception e is general one, specific exception arthimiticexception, 
indexoutbond exception 
One block can be following by multiple catch block must follow with catch block 
Finally block, execute if the program run successfully or fail it will execute in any case.
Use only with try block. Finally block will not execute without try block 
If you want to stop the finally block just press the stop red button, then JVM will stop the finally block
You can use try and finally block by skipping catch block 
 
Try
{
}
Catch (Exception e)
{
}
Finally 
{
}

 package coreJava; //one try can be followed by mutiplle catch blocks //catch should be an immediate block after try // public class exceptionDemo
any kind of exception e can be accept by it is generic one 

}

}


Collection 
Is collection of classes and interfaces it has many build in methods and classes which makes programming job super easy 
3 main collection 
List, set,map
List is order and may contain duplicate value include arrayList , LinkedList and vector
Initiate arrayList class
How to tell array list what kind object you are storing 
package coreJava;

import java.util.ArrayList;

public class arrayListexample { // can accept duplicate values //ArraList,LinkedList,vector- Implementing List interface /
/array have fixed size where as arraylist can grow dynamicaly //you can access and insert any value in any index private
 int i =5; public static void main(String[] args) { // TODO Auto-generated method stub

ArrayList<String> a=new ArrayList<String>(); a.add("rahul"); a.add("java"); a.add("java"); System.out.println(a);
 a.add(0, "student"); System.out.println(a); /*a.remove(1); a.remove("java"); System.out.println(a);*/
  System.out.println(a.get(2)); // testing System.out.println(a.contains("java")); System.out.println(a.indexOf("r")); 
  System.out.println(a.isEmpty()); System.out.println(a.size()); } protected void abc() 
  { // TODO Auto-generated method stub System.out.println("hello"); }

}

package coreJava;

import java.util.ArrayList;

public class arrayListexample { // can accept duplicate values //ArraList,LinkedList,vector- Implementing List interface //
array have fixed size where as arraylist can grow dynamicaly //you can access and insert any value in any index ,
 accept duplicate value In separate index , resizable ,insert anywhere,
array is sequential , fixed size
list guarantee order 


ArrayList<String> a=new ArrayList<String>();

}

Set is collection which Is not allowed duplicate value 
Hash set ,Linkedhashset, treeset 
Random order 
Iterator is interface make the return type <>, hasnext,next method 

Hash set vs hash table 

//HashSet treeset, LinkedHashset implements Set interface //does not accept duplicate values  // 
There is no guarantee elements stored in sequential order..Random order HashSet<String> hs= new HashSet<String>(); 
hs.add("USA"); hs.add("UK"); hs.add("INDIA"); hs.add("he"); hs.add("she"); hs.add("INDIA"); System.out.println(hs); 
//System.out.println(hs.remove("UK")); System.out.println(hs.isEmpty()); System.out.println(hs.size()); 
Iterator<String> i=hs.iterator(); while(i.hasNext()) { System.out.println(i.next()); } }



Map
Collection of value that store key value pair , no duplicate values 
Hashmap,treemap,lickedhashmap
Map.entry changing to set ,


HashMap<Integer,String> hm=new HashMap<Integer,String>(); hm.put(0, "hello"); hm.put(1, "Gudbye"); hm.put(42, "morning");
 hm.put(3, "evening"); System.out.println(hm.get(42)); hm.remove(42); System.out.println(hm.get(42)); Set sn= hm.entrySet(); 
 Iterator it =sn.iterator(); //hashtable -pass table set collections  while(it.hasNext())
  { System.out.println(it.next()); Map.Entry mp=(Map.Entry)it.next();// System.out.println(mp.getKey()); 
  System.out.println(mp.getValue()); }

Hash table vs hash map 
Hashmap is no threat  sate and no synchronize(multiple program can access and operate it at same time ) 
Hashmap , is threat safe and synchronize (if one program is using other program has to wait for it until release it then access), 
has no null value accept 



Oop
Class is fundamental  concept of oop , abject -state like size hardware, age , behaviour -like log off shut down  field =variable expected behaviour ,primitive is very limit we use customer made variable like Car class public Car name local variable(inside method)  vs instance variable , need access modifier general is private . we encapsulate to hide class variable access from public outside the class allowed method to access for outside of class to access, variable is state of class, create object of class can be treated as data type of. Null is internal value of class if we do not initialize it and string also has null value.
We can do validation inside getter and setter what is valid and not valid value to ensure class make valid object. if we use default constructor and have instable variable then we need to initialize like 
Class name = new class name ()
Name. Instance value to be pass if we contractor then we initial the value inside creating object 
We need to pass value or get through setter and getter, like bank, deposit, withdraw, without getter and setter it very risky that any one can change the fields value. 
Contractor use for initializing to initiate object that you created, only called once at the beginning, it can be overloaded . with this key word we can call another constructor but must the first line 
You can do setNAme(getname) method

Reference, object , class , instance , every object had address that you build , you can have many reference to the object ,


Inheritance share same common characteristic, line animal base class and subclass are inherited form base class by extending the class , then like , dog class, bird class , etc.
Return method had no parameter but had return type, setter method has passing parameter but void return type 

Interface 
100 abstracts, just method signature may has parameter but class must implement what need to be done not how need to be done 
Define no implementation, you can have extend multiple interface with, separator, you will have override methods . can have variable too no constructor 
Abstract class is mixed up method signature, can have constructor and variable,
Like a base class or concreate class but remember it cannot be initiated like interface 
Must be implement , is abstract co code , for common behavior , commitment , will not change , not initialization , error massage not implementing 
Composition 
Has relation ship modeling has relationship like computer made of different part and some of computer also make of different part like mother board, then the class can passed as instance variable of the main class when you initiate main class you pass value of composite class 
Always protect member of your class from outside of your class 
We always work with class variable or passing to method this key word 
You can even pass value to instance variable inside class as default value like private string car = Porsche 
Polymorphism 
Is about overriding 
Method behaviour r based on abject action, different behaviour,
Static vs instance , static use when we don’t need instance variable , you can access through class name ,  common copy across all , no initiating 


